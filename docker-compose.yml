services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: healthup
      POSTGRES_USER: healthup
      POSTGRES_PASSWORD: healthup_secure_password_a2032334186a8000
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U healthup"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # Redis for Celery
  redis:
    image: redis:7-alpine
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      - DATABASE_URL=postgresql://healthup:healthup_secure_password_a2032334186a8000@postgres:5432/healthup
      - REDIS_URL=redis://redis:6379
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-change-this-in-production}
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - COOKIE_SECURE=${COOKIE_SECURE:-false}
      - COOKIE_DOMAIN=${COOKIE_DOMAIN:-}
      - COOKIE_SAMESITE=${COOKIE_SAMESITE:-lax}
      - FRONTEND_ORIGINS=${FRONTEND_ORIGINS:-http://100.123.199.100:3000}
      - AMAZFIT_ENCRYPTION_KEY=${AMAZFIT_ENCRYPTION_KEY:-U4J8mBaHpSdNc84WvQ4p53MnsgcMfRbpfgVey_VRnRY=}
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./backend:/app
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    restart: unless-stopped

  # Celery Worker
  worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      - DATABASE_URL=postgresql://healthup:healthup_secure_password_a2032334186a8000@postgres:5432/healthup
      - REDIS_URL=redis://redis:6379
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-change-this-in-production}
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - AMAZFIT_ENCRYPTION_KEY=${AMAZFIT_ENCRYPTION_KEY:-U4J8mBaHpSdNc84WvQ4p53MnsgcMfRbpfgVey_VRnRY=}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./backend:/app
    command: celery -A app.worker.celery_app worker --loglevel=info
    restart: unless-stopped

  # Celery Beat (Scheduler)
  scheduler:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      - DATABASE_URL=postgresql://healthup:healthup_secure_password_a2032334186a8000@postgres:5432/healthup
      - REDIS_URL=redis://redis:6379
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-change-this-in-production}
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - AMAZFIT_ENCRYPTION_KEY=${AMAZFIT_ENCRYPTION_KEY:-U4J8mBaHpSdNc84WvQ4p53MnsgcMfRbpfgVey_VRnRY=}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./backend:/app
    command: celery -A app.worker.celery_app beat --loglevel=info
    restart: unless-stopped

  # Frontend PWA
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - VITE_API_URL=${VITE_API_URL:-http://100.123.199.100:8000}
      - VITE_GEMINI_API_KEY=${GEMINI_API_KEY}
    depends_on:
      - backend
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data: 